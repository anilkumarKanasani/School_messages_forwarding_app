
name: Run the applicaiton

on:
  workflow_dispatch:
  
  # https://crontab.guru/#0_19_*_*_*
  schedule:
    - cron: '0 19 * * *' # Run every day at 8 PM germany time 

jobs:
  Run-the-applicaiton:
    name: Run applicaiton
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11] 

    steps:

    - uses: actions/checkout@v2
    
    - name: Setting up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
      
    - name: Create .env_gold_app file
      run: |
        echo "BKP_TELEGRAM_TOKEN=${{ secrets.BKP_TELEGRAM_TOKEN }}" > .env_gold_app
        echo "BKP_TELEGRAM_CHAT_ID=${{ secrets.BKP_TELEGRAM_CHAT_ID }}" >> .env_gold_app
        echo "app_mode=gold_app" >> .env_gold_app
            
        cat .env_gold_app


    - name: Create .env_school_app file
      run: |
        echo "SCHOOL_ADDRESS_1=${{ secrets.SCHOOL_ADDRESS_1 }}" > .env_school_app
        echo "SCHOOL_ADDRESS_2=${{ secrets.SCHOOL_ADDRESS_2 }}" >> .env_school_app
        echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env_school_app
        echo "TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}" >> .env_school_app
        echo "TELEGRAM_TOKEN=${{ secrets.TELEGRAM_TOKEN }}" >> .env_school_app
        echo "app_mode=school_app" >> .env_school_app
            
        cat .env_school_app
    
    - name: Create config file
      run: echo "${{ secrets.GAPI_TOKEN }}" > token.json

    
    - name: Pull docker image
      run: docker pull anilkumarkanasani/messaging_app:latest
    
    - name: Run docker container as gold app
      run: docker run --name gold_app --env-file .env_gold_app anilkumarkanasani/messaging_app:latest


    - name: Run docker container as school app
      run: docker run --name school_app --volume ./token.json:/src/token.json --env-file .env_school_app anilkumarkanasani/messaging_app:latest